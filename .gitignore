# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore unnecessary files when creating a new project or
#  when migrating an existing project.
.idea/

# VSCode
.vscode/

# Alembic
alembic/versions/*.py
!alembic/versions/

# Database
*.db
*.sqlite
*.sqlite3

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*~

# Logs
logs/
*.log

# FastAPI
.pytest_cache/

# Local development
local_data/
temp/
test_data/

# IDE
*.swp
*.swo
*~

# macOS
.AppleDouble
.LSOverride

# Windows
desktop.ini

# Project specific
# API Keys and sensitive data
.env.local
.env.development
.env.production
config/local.py

# LangSmith traces
langsmith_traces/

# Backup files
*.bak
*.backup

# Upload directories
uploads/
temp_uploads/

# Excel processing temporary files
excel_temp/
processed_files/

# Model checkpoints and cache
model_cache/
embeddings_cache/

# Development databases
dev.db
test.db
local.sqlite

# Docker
docker-compose.override.yml
.dockerignore

# Jupyter notebooks (if added later)
notebooks/.ipynb_checkpoints/

# Testing
test_results/
coverage_reports/

# Documentation build
docs/build/
docs/_build/

# Performance profiling
*.prof
*.pstats

# Memory dumps
*.dump
*.dmp

# Local configuration overrides
local_config.py
local_settings.json

# Temporary migration files
migration_temp/

# IDE specific
.fleet/
.vscode/settings.json
.vscode/launch.json

# OS specific
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Default ignored files
/shelf/
/workspace.xml
# Editor-based HTTP Client requests
/httpRequests/
# Environment-dependent path to Maven home directory
/mavenHomeManager.xml
# Datasource local storage ignored files
/dataSources/
/dataSources.local.xml
.claude/settings.local.json

# AWS Infrastructure
# Sensitive AWS configuration files
aws/task-definition.json.bak
aws/service-definition.json.bak
aws/*.bak
aws/*.tmp

# Database passwords and secrets
db_password.txt
secrets.txt
*.key
*.pem
*.p12
*.jks

# Docker volumes and data
postgres_data/
docker_volumes/

# Application logs
app.log
fastapi.log
uvicorn.log

# AWS CLI temporary files
.aws/cli/cache/
.aws/credentials.local

# Terraform (if added later)
*.tfstate
*.tfstate.backup
.terraform/
.terraform.lock.hcl

# Kubernetes (if added later)
*.kubeconfig
k8s-secrets.yaml

# Environment-specific configs
.env.staging
.env.testing
.env.local

# Build artifacts
dist-docker/
build-artifacts/
documents/guide/DEPLOYMENT.md
